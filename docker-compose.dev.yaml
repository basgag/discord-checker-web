version: '3.8'
services:
  cron:
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.cron
    restart: unless-stopped
    depends_on:
      - pgbouncer
    env_file:
      - .env
  web:
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    depends_on:
      - postgres
      - pgbouncer
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./.next:/app/.next
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      # These are needed for automatic reloading on Windows
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      timeout: 5s
      start_period: 5s
      interval: 30s
      retries: 3
  pgbouncer:
    image: bitnami/pgbouncer:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "6432:6432"
    environment:
      - PGBOUNCER_DATABASE=dtc-web
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=dtc-web
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_MIN_POOL_SIZE=10
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dtc-web
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d dtc-web -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
volumes:
  pgadmin-data:
  postgres-data: